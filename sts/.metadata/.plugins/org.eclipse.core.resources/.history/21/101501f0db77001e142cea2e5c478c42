package com.mapping.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.mapping.entity.Product;
import com.mapping.entity.ProductRepository;
import com.mapping.entity.User;
import com.mapping.entity.UserRepository;

@RestController
public class Controller {

	@Autowired
	private UserRepository userRepository;
	@Autowired
	private ProductRepository productRepository;

	@GetMapping("/user/")
	public List<User> getAllUser() {
		return userRepository.findAll();
	}

	@GetMapping("/user/{id}")
	public Optional<User> getAllUser(@PathVariable("id") int id) {
		Optional<User> user = this.userRepository.findById(id);
		return user;
	}

	@GetMapping("/product/")
	public List<Product> getAllProduct() {
		return productRepository.findAll();
	}

	@GetMapping("/product/{id}")
	public Optional<Product> getAllProduct(@PathVariable("id") int id) {
		Optional<Product> product = this.productRepository.findById(id);
		return product;
	}

	@PostMapping("/user/")
	public User addUser(@RequestBody User user) {
		return userRepository.save(user);
	}

	@PostMapping("/product/")
	public Product addProduct(@RequestBody Product product) {
		return productRepository.save(product);
	}

	@DeleteMapping("/user/{id}")
	public ResponseEntity<Product> deleteUser(@PathVariable("id") int id) {
		try {
			userRepository.deleteById(id);
			return ResponseEntity.ok().build();
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		}
	}

	@DeleteMapping("/product/{id}")
	public ResponseEntity<Product> deleteProduct(@PathVariable("id") int id) {
		try {
			this.productRepository.deleteById(id);
			return ResponseEntity.ok().build();
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		}

	}

}
