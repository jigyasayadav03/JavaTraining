package com.authservice.security.config;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

public class UserInfoDetails implements UserDetails {
	String userName;
	String password;
	List<GrantedAuthority> authorities = new ArrayList<>();

	public UserInfoDetails(String userName, String password, Collection<? extends GrantedAuthority> roles) {
		this.userName = userName;
		this.password = password;
		this.authorities.addAll(roles);
	}

	public UserInfoDetails(Map<String, Object> claims) {
		this.userName = (String) claims.get("sub");
		this.authorities = ((List<String>) claims.get("roles")).stream().map(SimpleGrantedAuthority::new)
				.collect(Collectors.toList());
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return authorities;
	}

	@Override
	public String getPassword() {
		return password;
	}

	@Override
	public String getUsername() {
		return userName;
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}
}
