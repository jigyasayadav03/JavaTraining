package com.onlineShop.model;

import java.math.BigDecimal;
import java.time.LocalDateTime; // Import LocalDateTime for dateOfOrder
import java.util.List;
import java.util.stream.Collectors;

import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "user_order")
public class UserOrder {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @JsonProperty
    @Column
    private Long id;


    @JsonProperty
    @Column
    private BigDecimal total;

    @JsonProperty
    @Column
    private String status;

    @JsonProperty("date_of_order") 
    @Column(name = "date_of_order")
    private LocalDateTime dateOfOrder;

    public static UserOrder createFromCart(Cart cart) {
        UserOrder order = new UserOrder();
        //order.setItems(cart.getItems().stream().collect(Collectors.toList()));
        order.setTotal(cart.getTotal());
        order.setStatus("pending"); // Default status when order is created
        order.setDateOfOrder(LocalDateTime.now()); // Set current date and time when order is created
        return order;
    }
}
