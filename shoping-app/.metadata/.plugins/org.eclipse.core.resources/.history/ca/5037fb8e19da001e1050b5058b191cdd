package com.onlineShop.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "cart")
public class Cart {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@JsonProperty
	@Column
	private Long id;

	@Column
	private String name;

	@Column
	private String address;

	@Column
	private BigDecimal total;
	@Column(name = "payment_method")
	private String paymentMethod;

	
	@OneToMany(mappedBy = "cart")
	@Cascade(CascadeType.ALL)
	private List<CartItem> cartItems = new ArrayList<>();

	public void addItemToCart(Item item, int quantity) {
		CartItem cartItem = new CartItem(item, quantity);
		cartItems.add(cartItem);
		item.setQuantityAvailable(item.getQuantityAvailable() - quantity);
		updateTotal();
	}

	public void setCartItems(List<CartItem> cartItems) {
		this.cartItems.clear();
		if (cartItems != null) {
			this.cartItems.addAll(cartItems);
			for (CartItem cartItem : cartItems) {
				cartItem.setCart(this);
			}
		}
		updateTotal();
	}

	public void updateTotal() {
		BigDecimal newTotal = BigDecimal.ZERO;
		for (CartItem item : cartItems) {
			newTotal = newTotal.add(item.getItem().getPrice().multiply(BigDecimal.valueOf(item.getQuantity())));
		}
		this.total = newTotal;
	}

	
}